cat("\n")
}
}
Triangular(6)
Triangular <- function(n){
for (i in 1:n) {
for (j in 1:n) {
if(j>(n-i)) cat("*")
else cat(" ")
}
cat("\n")
}
}
Triangular(6)
for (j in 1:n) {
if(j>(n-i)) cat("* ")
else cat(" ")
}
cat("\n")
for (i in 1:n) {
for (j in 1:n) {
if(j>(n-i)) cat("* ")
else cat(" ")
}
cat("\n")
}
Triangular <- function(n){
for (i in 1:n) {
for (j in 1:n) {
if(j>(n-i)) cat("* ")
else cat(" ")
}
cat("\n")
}
}
Triangular(6)
Triangular(1)
Triangular(2)
Triangular(3)
Triangular(4)
Triangular(6)
Triangular <- function(n){
for (i in 1:n) {
for (j in 1:n) {
if(j>(n-i)) cat(" * ")
else cat(" ")
}
cat("\n")
}
}
Triangular(6)
Triangular <- function(n){
for (i in 1:n) {
for (j in 1:n) {
if(j>(n-i)) cat(" *")
else cat(" ")
}
cat("\n")
}
}
Triangular(6)
Triangular <- function(n){
for (i in 1:n) {
for (j in 1:n) {
if(j>(n-i)) cat("* ")
else cat(" ")
}
cat("\n")
}
}
Triangular(6)
Ln_seq(4)
rm(list = ls())
getwd()
setwd("C:/Users/doant/OneDrive/Desktop")
getwd()
rm(list = ls())
#a
Tn <- function(n){
a <- 0
for (i in 1:n) {
a <- a+i
}
return(a)
}
#b
Triangular <- function(n){
for (i in 1:n) {
for (j in 1:n) {
if(j>(n-i)) cat("* ")
else cat(" ")
}
cat("\n")
}
}
Triangular(6)
#c
Ln_seq <- function(n) {
a <- rep(0,n)
for (i in 2:n) {
a[i] <- a[i-1] + 3*(i-1)
}
return(a)
}
Ln_seq(4)
#d
L <- Ln_seq(41)
length(L[2:41])
T <- NULL
for (i in 1:40) {
T[i] <- Tn(i+1)
}
T
ratio <- T/L[2:41]
#e
plot(x=1:40, y=ratio, ylim = 0:1, xlab = "i", ylab = "ratio", main = "Ratio T(i+1)/L(i+1)", pch = 4, col = "green")
abline(h=0.33, col = "red")
#f
L[2:41]
100%%6
100/6
HundredDivs(10, 10^4)
HundredDivs <- function(n,M) {
counter <- 0
while (counter<=n) {
for (i in 1:M) {
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
}
}
return(a)
}
HundredDivs(10, 10^4)
HundredDivs <- function(n,M) {
counter <- 0
while (counter<=n) {
for (i in 1:M) {
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
}
}
return(a)
}
HundredDivs(5, 100)
HundredDivs <- function(n,M) {
counter <- 0
for (i in 1:Inf) {
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
}
if(counter==n) break
return(a)
}
HundredDivs(5)
HundredDivs <- function(n) {
counter <- 0
for (i in 1:100) {
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
}
if(counter==n) break
return(a)
}
HundredDivs(5)
HundredDivs <- function(n) {
counter <- 0
for (i in 1:200) {
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
}
if(counter==n) break
return(a)
}
HundredDivs(5)
HundredDivs <- function(n) {
counter <- 0
for (i in 1:100) {
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
}
if(counter==n) break
return(a)
}
HundredDivs(12)
HundredDivs <- function(n) {
counter <- 0
for (i in 1:10) {
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
}
if(counter==n) break
return(a)
}
HundredDivs(1)
HundredDivs(2)
counter <- 0
for (i in 1:10) {
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
}
if(counter==n) break
a <- Tn(i)
for (j in 1:a) {
if(a%%j==0) counter <- counter+1
}
counter <- 0
for (i in 1:Tn(100)) {
if(Tn(100)%%i==0) counter <- counter + 1
return(counter)
}
counter
for (i in 1:Tn(100)) {
if(Tn(100)%%i==0) {counter <- counter + 1}
return(counter)
}
counter
counter <- 0
for (i in 1:Tn(100)) {
if(Tn(100)%%i==0) {counter <- counter + 1}
return(counter)
}
counter
Tn(100)
counter <- 0
for (i in 1:5050) {
if(5050%%i==0) counter <- counter + 1
return(counter)
}
counter
5050%%5
counter <- 0
for (i in 1:5050) {
a <- i
if(5050%%a==0) counter <- counter + 1
return(counter)
}
counter
for (i in 1:6) {
if(5%%i==0) counter <- counter + 1
return(counter)
}
counter
counter <- 0
counter <- 0
for (i in 1:6) {
if(6%%i==0) counter <- counter + 1
return(counter)
}
counter
counter <- 0
for (i in 1:6) {
if(6%%i==0) {counter <- counter + 1}
}
counter
counter <- 0
for (i in 1:6) {
if(6%%i==0) {counter <- counter + 1}
}
counter
DivCounter <- function(n) {
counter <- 0
for (i in 1:n) {
if(n%%i==0) {counter <- counter + 1}
}
return(counter)
}
DivCounter(1)
DivCounter(3)
DivCounter(5)
DivCounter <- function(n) {
counter <- 0
for (i in 1:n) {
if(n%%i==0) {counter <- counter + 1}
}
return(counter)
}
HundredDivs2 <- function(n) {
for (i in 1:1000) {
a <- Tn(i)
if(DivCounter(a)==n) break
}
return(a)
}
HundredDivs(12)
HundredDivs(100)
HundredDivs2 <- function(n) {
a <- 0
for (i in 1:1000) {
a <- Tn(i)
if(DivCounter(a)==n) break
}
return(a)
}
HundredDivs(100)
HundredDivs2 <- function(n) {
a <- 0
for (i in 1:1000) {
a <- Tn(i)
if(DivCounter(a)==n) return(a)
}
}
HundredDivs(100)
HundredDivs2 <- function(n) {
a <- 0
for (i in 1:1000) {
a <- Tn(i)
if(DivCounter(a)==n) print(a)
}
}
HundredDivs(100)
HundredDivs(4)
for (i in 1:100) {
a <- Tn(i)
}
a
Tn(1000)
HundredDivs2 <- function(n) {
a <- 0
for (i in 1:1000) {
if(DivCounter(Tn(i))==n) return(Tn(i))
}
}
Tn(100)
HundredDivs2 <- function(...) {
a <- 0
for (i in 1:1000) {
if(DivCounter(Tn(i))==100) return(Tn(i))
}
}
HundredDivs(4)
Tn(100)
DivCounter(Tn(100))
HundredDivs <- function(...) {
a <- 0
for (i in 1:1000) {
if(DivCounter(Tn(i))==100) return(Tn(i))
}
}
HundredDivs <- function(n) {
b <- FALSE
while(b==FALSE) {
if(DivCounter(Tn(i))==n) b <- TRUE
}
return(Tn(i))
}
HundredDivs(12)
HundredDivs(4)
HundredDivs <- function(n) {
b <- FALSE
while(b==FALSE) {
if(DivCounter(Tn(i))==n) b <- TRUE
i <- i+1
}
return(Tn(i))
}
HundredDivs(4)
HundredDivs <- function(n) {
b <- FALSE
while(b==FALSE) {
i <- i+1
a <- Tn(i)
if(DivCounter(a)==n) b <- TRUE
}
return(a)
}
HundredDivs(1)
HundredDivs(12)
HundredDivs <- function(n) {
b <- FALSE
i <- 0
while(b==FALSE) {
i <- i+1
a <- Tn(i)
if(DivCounter(a)==n) b <- TRUE
}
return(a)
}
HundredDivs(12)
HundredDivs(n=12)
HundredDivs <- function(n) {
b <- FALSE
i <- 0
while(b==FALSE) {
i <- i+1
a <- Tn(i)
if(DivCounter(a)==n) b <- TRUE
}
return(a)
}
HundredDivs(n=12)
HundredDivs(n=1)
HundredDivs(n=2)
HundredDivs(n=100)
DivCounter(276)
HundredDivs(n=4)
HundredDivs(n=5)
DivCounter(947376)
getwd()
rm(list = ls())
#a
Tn <- function(n){
a <- 0
for (i in 1:n) {
a <- a+i
}
return(a)
}
#b
Triangular <- function(n){
for (i in 1:n) {
for (j in 1:n) {
if(j>(n-i)) cat("* ")
else cat(" ")
}
cat("\n")
}
}
Triangular(6)
#c
Ln_seq <- function(n) {
a <- rep(0,n)
for (i in 2:n) {
a[i] <- a[i-1] + 3*(i-1)
}
return(a)
}
Ln_seq(4)
#d
L <- Ln_seq(41)
L[2:41]
T <- NULL
for (i in 1:40) {
T[i] <- Tn(i+1)
}
T
ratio <- T/L[2:41]
#e
plot(x=1:40, y=ratio, ylim = 0:1, xlab = "i", ylab = "ratio", main = "Ratio T(i+1)/L(i+1)", pch = 4, col = "green")
abline(h=0.33, col = "red")
#function to count the number of divisors
DivCounter <- function(n) {
counter <- 0
for (i in 1:n) {
if(n%%i==0) {counter <- counter + 1}
}
return(counter)
}
HundredDivs <- function(n) {
b <- FALSE
i <- 0
while(b==FALSE) {
i <- i+1
a <- Tn(i)
if(DivCounter(a)==n) b <- TRUE
}
return(a)
}
HundredDivs(n=100)
#function to count the number of divisors
DivCounter <- function(n) {
counter <- 0
for (i in 1:n) {
if(n%%i==0) {counter <- counter + 1}
}
return(counter)
}
HundredDivs <- function(n) {
b <- FALSE
i <- 0
while(b==FALSE) {
i <- i+1
a <- Tn(i)
if(DivCounter(a)==n) b <- TRUE
}
return(a)
}
DivCounter(947376)
Tn(1000)
Tn(1500)
i <- 0
b <- FALSE
while (b==FALSE) {
i <- i+1
if(T(i)==947376) b <- TRUE
}
while (b==FALSE) {
i <- i+1
if(Tn(i)==947376) b <- TRUE
}
i
Tn(1376)
DivCounter(Tn(1376))
i
Tn(1376)
DivCounter(Tn(1376))
Triangular(6)
