rm(list = ls())
Armstrong <- function(x){
if(x%%10==0) return(FALSE)
else {
tmp <- x
count <- 0
while (tmp>0) {
count <- count + 1
tmp <- tmp%%10
}
tmp <- x
sum <- 0
while (tmp>0) {
sum <- sum + (tmp%%10)^count
tmp <- tmp%%10
}
if (som==x) return(TRUE)
else return(FALSE)
}
}
Armstrong(x = 153)
rm(list = ls())
Armstrong <- function(x){
if(x%%10==0) return(FALSE)
else {
tmp <- x
count <- 0
while (tmp>0) {
count <- count + 1
tmp <- tmp%%10
}
tmp <- x
sum <- 0
while (tmp>0) {
sum <- sum + (tmp%%10)^count
tmp <- tmp%%10
}
if (som==x) return(TRUE)
else return(FALSE)
}
}
Armstrong(x = 153)
x <- 153
Armstrong <- function(x){
if(x%%10==0) return(FALSE)
else {
tmp <- x
count <- 0
while (tmp>0) {
count <- count + 1
tmp <- tmp%%10
}
tmp <- x
sum <- 0
while (tmp>0) {
sum <- sum + (tmp%%10)^count
tmp <- tmp%%10
}
if (som==x) return(TRUE)
else return(FALSE)
}
}
Armstrong(x)
heights <- c(69,58)
names(heights) <- c("x","y")
heights
rm(list = ls())
library(ggplot2)
library(ggplot)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot()
rm(list = ls())
library(ggplot2)
ggplot()
ggplot() +
geom_line(aes(x=x,y=f),size=1,col="blue")
M <- 4
x <- seq(-0.99, 0.99, 0.03)
f <- log((1+x)/(1-x))
g <- Approx(x,M);g
ggplot() +
geom_line(aes(x=x,y=f),size=1,col="blue")
ggplot() +
geom_line(aes(x=x,y=f),size=1,col="blue") +
geom_point(aes(x=x,y=g),shape=8,size=2,col="red")
g <- Approx(x,M);g
Approx <- function(x,M){
taylor <- rep(0,length(x))
for(n in 1:M){
taylor=taylor+2*x^(2*n-1)/(2*n-1);
}
return(taylor)
}
M <- 4
x <- seq(-0.99, 0.99, 0.03)
f <- log((1+x)/(1-x))
g <- Approx(x,M);g
ggplot() +
geom_line(aes(x=x,y=f),size=1,col="blue") +
geom_point(aes(x=x,y=g),shape=8,size=2,col="red")
plot(1:20, 1:20, pch = 1:20)
#OR
cat(sprintf("%7d",11:16)); cat(sprintf("\n"))
cat(sprintf("%7.3f",ratio[10:15])); cat(sprintf("\n"))
sequence <- function(n) {
s <- c(2,3,4)
i <- 4
while (i <= n) {
s[i] <- s[i-2] + s[i-3]
i <- i+1
}
return(s)
}
seq <- sequence(16)
#OR
ratio <- seq[2:16]/seq[1:15]; ratio
cat(sprintf("%7.3f",ratio[10:15])); cat(sprintf("\n"))
plot(x = 2:16, y = ratio, pch=3, col = "magenta", xlab = "i", ylab = "Ratio", main = "S[i]/S[i-1]")
cat(sprintf("Counter = %d\n", counter))
for (i in 1:length(seqlist)) {
x <- seqlist[[i]]
if (x[3]==seq[i+2]) counter <- counter +1
}
seqlist <- list(matrix(c(2,3,4),3,1))
x <- list(c(2,3,4)); q%*%x[[1]]
for (i in 2:14) {
seqlist[[i]] <- q%*%seqlist[[i-1]]
}
counter <- 0
for (i in 1:length(seqlist)) {
x <- seqlist[[i]]
if (x[3]==seq[i+2]) counter <- counter +1
}
cat(sprintf("Counter = %d\n", counter))
seqlist <- list(matrix(c(2,3,4),3,1))
for (i in 2:14) {
seqlist[[i]] <- q%*%seqlist[[i-1]]
}
for (i in 2:14) {
seqlist[[i]] <- q%*%seqlist[[i-1]]
}
seqlist <- list(matrix(c(2,3,4),3,1))
q <- matrix(c(0,1,0,0,0,1,1,1,0), 3, 3, byrow = TRUE); q
for (i in 2:14) {
seqlist[[i]] <- q%*%seqlist[[i-1]]
}
counter <- 0
for (i in 1:length(seqlist)) {
x <- seqlist[[i]]
if (x[3]==seq[i+2]) counter <- counter +1
}
cat(sprintf("Counter = %d\n", counter))
sequence <- function(n) {
s <- c(2,3,4)
i <- 4
while (i <= n) {
s[i] <- s[i-2] + s[i-3]
i <- i+1
}
return(s)
}
getwd()
setwd("D:/UvA/Year 1/Block 5/Programming and Numerical Analysis/Past Exams")
rm(list = ls())
sequence(1)
sequence(4)
sequence(5)
sequence(6)
sequence <- function(n) {
s <- c(2,3,4)
i <- 4
while (i <= n) {
s[i] <- s[i-2] + s[i-3]
i <- i+1
}
return(s)
}
sequence(6)
sequence(6)
sequence(1)
sequence(2)
sequence(4)
sequence(5)
seq(8,10,1)
plot(1:20, 1:20, pch = 1:20)
